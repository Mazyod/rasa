name: Vulnerability Scan

on:
  schedule:
    # Run once every day
    - cron: '0 0 0 * *'

jobs:
  scan:
    name: Vulnerability scan
    runs-on: ubuntu-latest

    env:
      DOCKERFILE: Dockerfile_with_poetry_lock

    steps:
    - name: Checkout git repository üïù
      uses: actions/checkout@v2

    - name: Get latest tagged Rasa Open Source version üîé
      # We only scan the latest stable version of the Rasa Open Source Image
      run: |
        git fetch --depth=1 origin "+refs/tags/*:refs/tags/*"

        # Fetch branch history because `git describe` otherwise will break
        git fetch --prune --unshallow
        LATEST_TAGGED_NON_ALPHA_RASA_VERSION=$(git describe --tags --exclude "*[a-z]*" --abbrev=0)

        echo "::set-env name=LATEST_TAGGED_NON_ALPHA_RASA_VERSION::$LATEST_TAGGED_NON_ALPHA_RASA_VERSION"

    - name: Add poetry.lock üîí
      # Trivy depends on the presence of `poetry.lock` to scan Python dependencies
      run: |
        BASE_IMAGE=rasa/rasa:${LATEST_TAGGED_NON_ALPHA_RASA_VERSION}-full
        docker pull $BASE_IMAGE

        # Create Dockerfile which includes poetry.lock
        tee -a $DOCKERFILE << END
        FROM $BASE_IMAGE
        COPY poetry.lock .
        END

        IMAGE_NAME=rasa/rasa:${LATEST_TAGGED_NON_ALPHA_RASA_VERSION}-scanned
        docker build -f $DOCKERFILE -t $IMAGE_NAME .

        echo "::set-env name=IMAGE_WITH_POETRY_LOCK::$IMAGE_NAME"

    - name: Scan image üïµÔ∏è‚Äç‚ôÄÔ∏èüïµÔ∏è‚Äç‚ôÇÔ∏è
      uses: homoluctus/gitrivy@v2.0.0
      with:
        # Needs the token so it can create an issue once a vulnerability was found
        token: ${{ secrets.GITHUB_TOKEN }}
        image: ${{ env.IMAGE_WITH_POETRY_LOCK }}
        ignore_unfixed: true
